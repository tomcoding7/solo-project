{
  "GET /api": {
    "description": "serves up a json representation of all the available endpoints of the api"
  },
  "GET /api/topics": {
    "description": "serves an array of all topics",
    "queries": [],
    "exampleResponse": {
      "topics": [{ "slug": "football", "description": "Footie!" }]
    }
  },
  "GET /api/articles": {
    "description": "serves an array of all articles",
    "queries": ["author", "topic", "sort_by", "order"],
    "exampleResponse": {
      "articles": [
        {
          "title": "Seafood substitutions are increasing",
          "topic": "cooking",
          "author": "weegembump",
          "body": "Text from the article..",
          "created_at": "2018-05-30T15:59:13.341Z",
          "votes": 0,
          "comment_count": 6
        }
      ]
    }
  },
  "GET /api/articles/:article_id": {
    "description": "Retrieves an article by its ID",
    "queries": [],
    "exampleResponse": {
      "article": {
        "author": "weegembump",
        "title": "Seafood substitutions are increasing",
        "article_id": 1,
        "body": "Text from the article..",
        "topic": "cooking",
        "created_at": "2018-05-30T15:59:13.341Z",
        "votes": 0,
        "article_img_url": "url_to_image.jpg"
      }
    }
  },
  "POST /api/articles/:article_id/comments": {
        "description": "Add a comment for a specific article.",
        "parameters": {
            "article_id": "The ID of the article to which the comment is being added."
        },
        "requestBody": {
            "type": "object",
            "properties": {
                "username": {
                    "type": "string",
                    "description": "The username of the person adding the comment."
                },
                "body": {
                    "type": "string",
                    "description": "The content of the comment."
                }
            },
            "required": ["username", "body"]
        },
        "responses": {
            "201": {
                "description": "The posted comment.",
                "schema": {
                    "type": "object",
                    "properties": {
                        "comment_id": { "type": "integer" },
                        "votes": { "type": "integer" },
                        "created_at": { "type": "string", "format": "date-time" },
                        "author": { "type": "string" },
                        "body": { "type": "string" },
                        "article_id": { "type": "integer" }
                    }
                }
            },
            "400": {
                "description": "Invalid input, please provide both username and body."
            },
            "404": {
                "description": "Article not found."
            }
        }
    },
    "GET /api/articles/:article_id/comments": {
        "description": "Get all comments for a specific article.",
        "parameters": {
            "article_id": "The ID of the article for which the comments are being retrieved."
        },
        "responses": {
            "200": {
                "description": "An array of comments for the given article_id, sorted by the most recent comments first.",
                "schema": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "comment_id": { "type": "integer" },
                            "votes": { "type": "integer" },
                            "created_at": { "type": "string", "format": "date-time" },
                            "author": { "type": "string" },
                            "body": { "type": "string" },
                            "article_id": { "type": "integer" }
                        }
                    }
                }
            },
            "400": {
                "description": "Invalid article ID format."
            },
            "404": {
                "description": "No comments found for this article."
            }
        }
    }
}

